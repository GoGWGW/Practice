//May 21 #2

class BasePrinter
{
	string model;
	string manufacturer;
	int printedCount;
	int availableCount;
public:
	BasePrinter(string model, string manufacturer, int totalPapers);
protected:
	virtual bool print(int pages = 1);
	virtual void show();
	string getModel() { return model; }
	string getManufacturer() { return manufacturer; }
	int getPrintedCount() { return printedCount; }
	int getAvailableCount() { return availableCount; }
};
BasePrinter::BasePrinter(string model, string manufacturer, int totalPapers) {
	this->model = model;
	this->manufacturer = manufacturer;
	this->printedCount = 0;
	this->availableCount = totalPapers;
}
bool BasePrinter::print(int pages) {
	if (availableCount < pages) {
		cout << "용지가 부족하여 프린트할 수 없습니다." << endl;
		return false;
	}
	printedCount += pages;
	availableCount -= pages;
	return true;
}
void BasePrinter::show() {
	cout << model + " ," << manufacturer << " ,남은 종이 " << availableCount << "장" << " ,";
}
class InkJetPrinter :public BasePrinter {
	int ink;
public:
	InkJetPrinter(string model,string manufacturer,int totalPapers, int ink):BasePrinter(model, manufacturer, totalPapers)
	{
		this->ink = ink; }
	virtual bool print(int pages = 1);
	virtual void show();
};
bool InkJetPrinter::print(int pages) {
	int printedCount = getPrintedCount();
	if (getAvailableCount() < pages) {
		cout << "용지가 부족하여 프린트할 수 없습니다." << endl;
		return false;
	}
	else {
		cout << "프린트 하였습니다." << endl;
		BasePrinter::print(pages);
		ink -= pages;
		return true;
	}
}
void InkJetPrinter::show() {
	BasePrinter::show();
	cout << "남은 잉크" << ink;
}
class LaserPrinter :public BasePrinter {
	int ink;
public:
	LaserPrinter(string model, string manufacturer, int totalPapers, int ink) :BasePrinter(model, manufacturer, totalPapers)
	{
		this->ink = ink;
	}
	virtual bool print(int pages = 1);
	virtual void show();
};
bool LaserPrinter::print(int pages) {
	int printedCount = getPrintedCount();
	if (getAvailableCount() < pages) {
		cout << "용지가 부족하여 프린트할 수 없습니다." << endl;
		return false;
	}
	else {
		cout << "프린트 하였습니다." << endl;
		BasePrinter::print(pages);
		ink -= pages;
		return true;
	}
}
void LaserPrinter::show() {
	BasePrinter::show();
	cout << "남은 잉크" << ink;
}
int main()
{
	InkJetPrinter* ip = new InkJetPrinter("Officejet V40", "HP", 5, 10);
	LaserPrinter* lp = new LaserPrinter("SCX-6x45", "삼성전자", 3, 20);
	cout << "현재 작동중인 2 대의 프린터는 아래와 같다" << endl;
	cout << "잉크젯 : ";
	ip->show();
	cout << endl;
	cout << "레이저 : ";
	lp->show();
	cout << endl;
	int printer, pages;
	char conti;
	while (true) {
		cout << endl << "프린터(1:잉크젯, 2:레이저)와 매수 입력>>";
		cin >> printer >> pages;
		switch (printer) {
		case 1: // 잉크젯
			ip->print(pages);
			break;
		case 2: // 레이저
			lp->print(pages);
			break;
		}
		ip->show();
		cout << endl;
		lp->show();
		cout << endl;
		cout << "계속 프린트 하시겠습니까(y/n)>>";
		cin >> conti;
		if (conti == 'y')
			continue;
		else
			break;
	}
	delete ip;
	delete lp;
}
