//2021 may 7 #2
class Matrix {
	int ad[4];
	int size = 4;
public:
	Matrix(int a = 0, int b = 0, int c = 0, int d = 0) {
		ad[0] = a; ad[1] = b; ad[2] = c; ad[3] = d;
	}
	void show();
	friend void operator>>(Matrix op1, int* op2);
	friend void operator<<(Matrix& op2, int* op1);
};
void Matrix::show() {
	printf("Matrix = { ");
	for (int i = 0; i < 4; i++)
		cout << ad[i] << " ";
	cout << "}";
}
void operator>>(Matrix op1, int* op2) {
	for (int i = 0; i < op1.size; i++)
		op2[i] = op1.ad[i];
}
void operator<<(Matrix& op2, int* op1) {
	for (int i = 0; i < op2.size; i++)
		op2.ad[i] = op1[i];
}
int main()
{
	Matrix a(4, 3, 2, 1), b;
	int x[4], y[4] = { 1,2,3,4 }; // 2차원 행렬의 4 개의 원소 값
	a >> x; // a의 각 원소를 배열 x에 복사. x[]는 {4,3,2,1}
	b << y; // 배열 y의 원소 값을 b의 각 원소에 설정
	for (int i = 0; i < 4; i++) cout << x[i] << ' '; // x[] 출력
	cout << endl;
	b.show();
}
